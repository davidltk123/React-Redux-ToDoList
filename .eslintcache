[{"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\index.js":"1","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\App.js":"2","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\reportWebVitals.js":"3","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\reducers.js":"4","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\actionType.js":"5","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\ToDoGenerator.jsx":"6","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\ToDoGeneratorContainer.jsx":"7","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\action.js":"8","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\ToDoGroupContainer.jsx":"9","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\ToDoGroup.jsx":"10","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\ToDoItem.jsx":"11","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\ToDoItemContainer.jsx":"12","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\ToDoList.jsx":"13","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\DoneToDoListContainer.jsx":"14","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\DoneList.jsx":"15","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\NotFound.jsx":"16","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\apis\\todos.js":"17","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\apis\\api.js":"18","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\Navigation.jsx":"19","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\LabelGeneratorContainer.jsx":"20","C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\LabelGenerator.jsx":"21"},{"size":804,"mtime":1607501705440,"results":"22","hashOfConfig":"23"},{"size":690,"mtime":1607517131469,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":720,"mtime":1607567566560,"results":"26","hashOfConfig":"23"},{"size":168,"mtime":1607567589484,"results":"27","hashOfConfig":"23"},{"size":993,"mtime":1607520601004,"results":"28","hashOfConfig":"23"},{"size":369,"mtime":1607525470911,"results":"29","hashOfConfig":"23"},{"size":437,"mtime":1607567580651,"results":"30","hashOfConfig":"23"},{"size":439,"mtime":1607496090672,"results":"31","hashOfConfig":"23"},{"size":1209,"mtime":1607520882220,"results":"32","hashOfConfig":"23"},{"size":1195,"mtime":1607567504845,"results":"33","hashOfConfig":"23"},{"size":415,"mtime":1607567530120,"results":"34","hashOfConfig":"23"},{"size":430,"mtime":1607519645669,"results":"35","hashOfConfig":"23"},{"size":307,"mtime":1607486695401,"results":"36","hashOfConfig":"23"},{"size":828,"mtime":1607533530121,"results":"37","hashOfConfig":"23"},{"size":243,"mtime":1607487697616,"results":"38","hashOfConfig":"23"},{"size":371,"mtime":1607570004533,"results":"39","hashOfConfig":"23"},{"size":149,"mtime":1607495655795,"results":"40","hashOfConfig":"23"},{"size":762,"mtime":1607521340474,"results":"41","hashOfConfig":"23"},{"size":359,"mtime":1607567656918,"results":"42","hashOfConfig":"23"},{"size":4354,"mtime":1607567618264,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"2elvoi",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\index.js",[],["88","89"],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\App.js",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\reportWebVitals.js",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\reducers.js",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\actionType.js",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\ToDoGenerator.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\ToDoGeneratorContainer.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\action.js",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\ToDoGroupContainer.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\ToDoGroup.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\ToDoItem.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\ToDoItemContainer.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\ToDoList.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\DoneToDoListContainer.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\DoneList.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\NotFound.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\apis\\todos.js",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\apis\\api.js",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\Navigation.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\containers\\LabelGeneratorContainer.jsx",[],"C:\\Users\\David\\Desktop\\web dev\\react-todo\\src\\components\\LabelGenerator.jsx",["90"],"import React, { Component } from 'react';\r\nimport { Tag, Input, Tooltip, Select } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { updateToDo } from \"../apis/todos\"\r\n\r\nclass LabelGroup extends Component {\r\n    state = {\r\n        tags: this.props.todo.labels,\r\n        inputVisible: false,\r\n        inputValue: '',\r\n    };\r\n\r\n    handleClose = removedTag => {\r\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n        this.setState({ tags });\r\n        updateToDo(this.props.todo.id, { ...this.props.todo, labels: tags }).then((response) => {\r\n            this.props.updateToDo(response.data)\r\n        })\r\n    };\r\n\r\n    showInput = () => {\r\n        this.setState({ inputVisible: true }, () => this.input.focus());\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({ inputValue: e.target.value });\r\n    };\r\n\r\n    handleInputConfirm = () => {\r\n        const { inputValue } = this.state;\r\n        let { tags } = this.state;\r\n        if (inputValue && tags.indexOf(inputValue) === -1) {\r\n            tags = [...tags, inputValue];\r\n        }\r\n        this.setState({\r\n            tags,\r\n            inputVisible: false,\r\n            inputValue: '',\r\n        });\r\n        updateToDo(this.props.todo.id, { ...this.props.todo, labels: tags }).then((response) => {\r\n            this.props.updateToDo(response.data);\r\n        })\r\n    };\r\n\r\n    saveInputRef = input => {\r\n        this.input = input;\r\n    };\r\n\r\n    saveEditInputRef = input => {\r\n        this.editInput = input;\r\n    };\r\n\r\n    colorArray = [\"Red \", \"Orange\", \"Violet\", \"Green\", \"Blue\", \"Purple\"];\r\n\r\n    hashString = (str) => str\r\n        .split('')\r\n        .map((char) => char.charCodeAt(0))\r\n        .reduce((a, b) => a + b, 0);\r\n\r\n    hashColor = (str) => this.colorArray[this.hashString(str) % this.colorArray.length];\r\n\r\n    render() {\r\n        // const { Option } = Select;\r\n\r\n        const { tags, inputVisible, inputValue } = this.state;\r\n        return (\r\n            <>\r\n                {tags.map((tag, index) => {\r\n\r\n                    const isLongTag = tag.length > 20;\r\n\r\n                    const tagElem = (\r\n                        <Tag\r\n                            className=\"edit-tag\"\r\n                            key={tag}\r\n                            closable\r\n                            color={this.hashColor(tag)}\r\n                            onClose={() => this.handleClose(tag)}\r\n                        >\r\n                            <span>\r\n                                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                            </span>\r\n                        </Tag>\r\n                    );\r\n                    return isLongTag ? (\r\n                        <Tooltip title={tag} key={tag}>\r\n                            {tagElem}\r\n                        </Tooltip>\r\n                    ) : (\r\n                            tagElem\r\n                        );\r\n                })}\r\n                {inputVisible && (\r\n                    /*<Input.Group compact size=\"large\">*/\r\n                    <Input\r\n                        /*style={{ width: '50%' }}*/\r\n                        ref={this.saveInputRef}\r\n                        type=\"text\"\r\n                        size=\"small\"\r\n                        className=\"tag-input\"\r\n                        value={inputValue}\r\n                        onChange={this.handleInputChange}\r\n                        onBlur={this.handleInputConfirm}\r\n                        onPressEnter={this.handleInputConfirm}\r\n                    />\r\n                    /*<Select defaultValue=\"red\" style={{ width: '30%' }}>\r\n                        <Option value=\"red\">red</Option>\r\n                        <Option value=\"orange\">orange</Option>\r\n                        <Option value=\"lime\">lime</Option>\r\n                        <Option value=\"green\">green</Option>\r\n                        <Option value=\"blue\">blue</Option>\r\n                        <Option value=\"purple\">purple</Option>\r\n                    </Select>\r\n                </Input.Group>*/\r\n                )}\r\n                {!inputVisible && (\r\n                    <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n                        <PlusOutlined /> New Label\r\n                    </Tag>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LabelGroup;",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":31,"nodeType":"97","messageId":"98","endLine":2,"endColumn":37},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]